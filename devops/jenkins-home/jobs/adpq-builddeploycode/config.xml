<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@3.7.0">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>https://github.com/InTimeTec-LLC/kmt-prototype.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>*/master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions/>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash
echo &quot;********** FRONT-END BUILD START **********&quot;
cd ${WORKSPACE}/client-src
echo &quot;********** NPM INSTALLATION **********&quot;
npm install
echo &quot;********** ANGULAR CLI INSTALLATION **********&quot;
npm install @angular/cli
echo &quot;********** NG BUILD START **********&quot;
ng build
echo &quot;********** COPYING DIST FOLDER TO STATIC IN SERVER-SRC **********&quot;
if [[ -d &quot;../server-src/static&quot; ]]
then
        rm -rf ../server-src/static
fi
mkdir ../server-src/static
cp -r dist/* ../server-src/static

echo &quot;********** BACK-END BUILD START **********&quot;
cd ${WORKSPACE}/server-src
echo &quot;********** CHANGING THE MONGO DB IP IN application.properties with $HOSTIP **********&quot;
sed -i &quot;s/^spring.data.mongodb.host.*/spring.data.mongodb.host=$HOSTIP/g&quot; config/application.properties
chmod +x setenv.sh
./setenv.sh
chmod +x gradlew
./gradlew -x test check
echo &quot;********** RUNNING UNIT TEST CASES **********&quot;
./gradlew runUnitTests
echo &quot;********** BUILD START **********&quot;
./gradlew clean build
cp -r build/libs/*.war /var/jenkins_home/deployCodeFiles/</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>