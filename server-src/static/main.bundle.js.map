{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/add-knowledge-base-article/add.component.html","./src/app/add-knowledge-base-article/add.component.ts","./src/app/add-user/add-user.component.html","./src/app/add-user/add-user.component.scss","./src/app/add-user/add-user.component.ts","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/content/content.component.html","./src/app/content/content.component.scss","./src/app/content/content.component.ts","./src/app/dashboard/dashboard.component.css","./src/app/dashboard/dashboard.component.html","./src/app/dashboard/dashboard.component.ts","./src/app/edit-knowledge-base-article/edit.component.html","./src/app/edit-knowledge-base-article/edit.component.ts","./src/app/edit-user/edit-user.component.html","./src/app/edit-user/edit-user.component.scss","./src/app/edit-user/edit-user.component.ts","./src/app/footer/footer.component.html","./src/app/footer/footer.component.scss","./src/app/footer/footer.component.ts","./src/app/left-panel/left-panel.component.html","./src/app/left-panel/left-panel.component.scss","./src/app/left-panel/left-panel.component.ts","./src/app/login/login.component.html","./src/app/login/login.component.scss","./src/app/login/login.component.ts","./src/app/main/main.component.html","./src/app/main/main.component.scss","./src/app/main/main.component.ts","./src/app/user-list/user-list.component.html","./src/app/user-list/user-list.component.scss","./src/app/user-list/user-list.component.ts","./src/environments/environment.ts","./src/main.ts","./src/mock/fake-backend.ts","./src/mock/user-data.ts","./src/shared/material.module.ts","./src/shared/service/authentication/authentication.service.ts","./src/shared/service/helper/auth-guards.ts","./src/shared/service/helper/jwt-interceptor.ts","./src/shared/service/knowledge-base-article/knowledge-base-article.service.ts","./src/shared/service/message/message.ts","./src/shared/service/user/user.service.ts","./src/shared/shared.module.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"<form  (ngSubmit)=\\\"onSubmit(article)\\\" [formGroup]=\\\"article\\\">\\r\\n<div>\\r\\n  <div>\\r\\n    <label>Title: </label>\\r\\n    <input formControlName=\\\"title\\\" type=\\\"text\\\" placeholder=\\\"Title\\\" />\\r\\n    <div class=\\\"error\\\" \\r\\n    *ngIf=\\\"article.get('title').touched \\r\\n    && article.get('title').hasError('required')\\\">\\r\\n      Title is required\\r\\n    </div>\\r\\n  </div>\\r\\n  <div>\\r\\n    <label>Description: </label>\\r\\n    <quill-editor #description id=\\\"description\\\" style=\\\"height: 300px\\\"\\r\\n    placeholder=\\\"Description\\\"\\r\\n  formControlName=\\\"description\\\"></quill-editor>\\r\\n\\r\\n    <div class=\\\"error\\\" \\r\\n    *ngIf=\\\"article.get('description').touched \\r\\n    && article.get('description').hasError('required')\\\">\\r\\n      Description is required\\r\\n    </div>\\r\\n  </div>\\r\\n  <div>\\r\\n    <button [disabled]=\\\"article.invalid\\\">Save</button>\\r\\n  </div>\\r\\n</div> \\r\\n<div *ngIf=\\\"articleTitle\\\" [ngClass] = \\\"'success'\\\"> {{articleTitle}} created. </div>\\r\\n<div *ngIf=\\\"errorMessage\\\" [ngClass] = \\\"'error'\\\"> {{errorMessage}} </div>\\r\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/add-knowledge-base-article/add.component.html\n// module id = ./src/app/add-knowledge-base-article/add.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { KnowledgeBaseArticleService } from '../../shared/service/knowledge-base-article/knowledge-base-article.service';\r\nimport { Router } from '@angular/router';\r\nimport { KnowledgeBaseArticle } from '../../shared/modals/knowledge-base-article';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-add-kb-article',\r\n  templateUrl: './add.component.html',\r\n  styleUrls: []\r\n})\r\nexport class AddArticleComponent implements OnInit {\r\n\r\n  articles: KnowledgeBaseArticle[];\r\n  errorMessage: String;\r\n  articleTitle: String;\r\n  article: FormGroup;\r\n\r\n\r\n\r\n  constructor(\r\n    private kbContentService: KnowledgeBaseArticleService,\r\n    private fb: FormBuilder\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.article = this.fb.group({\r\n      title: ['', [Validators.required, Validators.minLength(2)]],\r\n     description: ['', Validators.required],\r\n    });\r\n\r\n  }\r\n\r\n\r\n  onSubmit({value, valid}: {value: KnowledgeBaseArticle, valid: boolean }) {\r\n    this.kbContentService.createKnowledgeBaseArticle(value)\r\n    .subscribe( article => {\r\n                    this.articleTitle = article.title;\r\n         },\r\n                  error => this.errorMessage = <any>error);\r\n\r\n  }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/add-knowledge-base-article/add.component.ts","module.exports = \"<div class=\\\"container\\\">\\r\\n    <toaster-container></toaster-container>\\r\\n    <div class=\\\"add-heading\\\"><h2 class=\\\"heading-margin\\\">Add User</h2></div>\\r\\n    <form  (ngSubmit)=\\\"onSubmit(user)\\\" [formGroup]=\\\"user\\\">\\r\\n        <div class=\\\"lower-container\\\">\\r\\n            <div class=\\\"form-box\\\">\\r\\n          <mat-form-field>\\r\\n            <input formControlName=\\\"firstName\\\" matInput placeholder=\\\"First Name\\\">\\r\\n          </mat-form-field>\\r\\n          <div class=\\\"error\\\" \\r\\n            *ngIf=\\\"user.get('firstName').touched \\r\\n            && user.get('firstName').hasError('required')\\\">\\r\\n              First Name is required\\r\\n          </div>\\r\\n        \\r\\n          <mat-form-field>\\r\\n            <input formControlName=\\\"lastName\\\" matInput placeholder=\\\"Last Name\\\">\\r\\n          </mat-form-field>\\r\\n          <div class=\\\"error\\\" \\r\\n            *ngIf=\\\"user.get('lastName').touched \\r\\n            && user.get('lastName').hasError('required')\\\">\\r\\n              Last Name is required\\r\\n          </div>\\r\\n        \\r\\n          <mat-form-field>\\r\\n            <mat-select formControlName=\\\"userRole\\\" placeholder=\\\"Role\\\">\\r\\n                <mat-option value=\\\"\\\">Select</mat-option>\\r\\n                <mat-option value=\\\"user\\\">User</mat-option>\\r\\n              <mat-option value=\\\"manager\\\">Manager</mat-option>\\r\\n              <mat-option value=\\\"admin\\\">Admin</mat-option>\\r\\n            </mat-select>\\r\\n          </mat-form-field>\\r\\n          <div class=\\\"error\\\" \\r\\n            *ngIf=\\\"user.get('userRole').touched \\r\\n            && user.get('userRole').hasError('required')\\\">\\r\\n              Role is required\\r\\n          </div>\\r\\n        \\r\\n          <mat-form-field>\\r\\n            <input formControlName=\\\"email\\\" matInput placeholder=\\\"Email\\\">\\r\\n          </mat-form-field>\\r\\n          <div class=\\\"error\\\" \\r\\n            *ngIf=\\\"user.get('email').touched \\r\\n            && user.get('email').hasError('email')\\\">\\r\\n              Please provide correct email\\r\\n          </div>\\r\\n        \\r\\n          <mat-form-field>\\r\\n            <input formControlName=\\\"password\\\" type=\\\"password\\\" matInput placeholder=\\\"Password\\\">\\r\\n          </mat-form-field>\\r\\n          <div class=\\\"error\\\" \\r\\n            *ngIf=\\\"user.get('password').touched \\r\\n            && user.get('password').hasError('required')\\\">\\r\\n              Password is required\\r\\n          </div>\\r\\n          <span *ngIf=\\\"cpwd.hasError('invalid')\\\"> Invalid Password </span>\\r\\n        \\r\\n          <mat-form-field>\\r\\n            <input formControlName=\\\"confirmPassword\\\" type=\\\"password\\\" matInput placeholder=\\\"Confirm Password\\\">\\r\\n          </mat-form-field>\\r\\n          <div class=\\\"error\\\" \\r\\n            *ngIf=\\\"user.get('confirmPassword').touched \\r\\n            && user.get('confirmPassword').hasError('required')\\\">\\r\\n              Confirm Password is required\\r\\n          </div>\\r\\n          <div class=\\\"error\\\" \\r\\n            *ngIf=\\\"user.get('confirmPassword').touched \\r\\n            && user.get('confirmPassword').hasError('notEquivalent')\\\">\\r\\n              Password and Confirm Password should match\\r\\n          </div>\\r\\n            </div>\\r\\n        <div class=\\\"button-postion\\\">\\r\\n          <button type=\\\"button\\\" mat-raised-button (click)=\\\"onCancle()\\\">Cancel</button>\\r\\n          <button mat-raised-button type=\\\"submit\\\">Save</button>\\r\\n        </div>\\r\\n        \\r\\n          <div *ngIf=\\\"addUserName\\\" [ngClass] = \\\"'success'\\\"> {{addUserName}} created. </div>\\r\\n        \\r\\n        </div>\\r\\n        </form>\\r\\n</div>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/add-user/add-user.component.html\n// module id = ./src/app/add-user/add-user.component.html\n// module chunks = main","module.exports = \".heading-margin {\\n  margin: 0px; }\\n\\n.mat-form-field {\\n  width: 45%;\\n  margin-right: 26px; }\\n\\n.form-box {\\n  float: left;\\n  width: 100%; }\\n\\n.button-postion {\\n  float: right; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/add-user/add-user.component.scss\n// module id = ./src/app/add-user/add-user.component.scss\n// module chunks = main","import { Component, OnInit, ViewChild  } from '@angular/core';\r\nimport { UserService } from '../../shared/service/user/user.service';\r\nimport { Router } from '@angular/router';\r\nimport { User } from '../../shared/modals/user';\r\nimport { AbstractControl, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport {ToasterModule, ToasterService} from 'angular5-toaster';\r\n\r\n@Component({\r\n  selector: 'app-add-user',\r\n  templateUrl: './add-user.component.html',\r\n  styleUrls: ['./add-user.component.scss']\r\n})\r\n\r\nexport class AddUserComponent implements OnInit {\r\n\r\n  users: User[];\r\n  errorMessage: String;\r\n  addUserName: String;\r\n  user: FormGroup;\r\n\r\n\r\n  get cpwd() {\r\n    return this.user.get('confirmPassword');\r\n   }\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private toasterService: ToasterService\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.user = this.fb.group({\r\n      firstName: ['', [Validators.required, Validators.minLength(2)]],\r\n      lastName: ['', Validators.required],\r\n      password: ['', Validators.required],\r\n      userRole: ['', Validators.required],\r\n      email: ['', Validators.email],\r\n      confirmPassword: ['', Validators.required],\r\n    }, {validator: this.validateConfirmPassword('password', 'confirmPassword')});\r\n\r\n  }\r\n\r\n  validateConfirmPassword(passwordKey: string, passwordConfirmationKey: string) {\r\n    return (group: FormGroup) => {\r\n      const passwordInput = group.controls[passwordKey],\r\n          passwordConfirmationInput = group.controls[passwordConfirmationKey];\r\n      if (passwordInput.value !== passwordConfirmationInput.value) {\r\n        return passwordConfirmationInput.setErrors({notEquivalent: true});\r\n      }\r\n        return passwordConfirmationInput.setErrors(null);\r\n    };\r\n  }\r\n\r\n  onSubmit({value, valid}: {value: any, valid: boolean }) {\r\n    delete value.confirmPassword;\r\n    this.userService.createUser(value)\r\n    .subscribe( data => {\r\n              this.toasterService.pop('success', 'Success', data.success.message);\r\n         },\r\n                  error => {\r\n                    this.toasterService.pop('error', 'Error', error.failure.message);\r\n                  }\r\n                );\r\n\r\n  }\r\n\r\n  onCancle() {\r\n    this.router.navigateByUrl('/userlist');\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/add-user/add-user.component.ts","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { AddArticleComponent } from './add-knowledge-base-article/add.component';\r\nimport { EditArticleComponent } from './edit-knowledge-base-article/edit.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { AuthGuard } from '../shared/service/helper/auth-guards';\r\nimport { AddUserComponent } from './add-user/add-user.component';\r\nimport { UserListComponent } from './user-list/user-list.component';\r\nimport { EditUserComponent } from './edit-user/edit-user.component';\r\n\r\nconst routes:  Routes = [\r\n    {\r\n      path: 'dashboard',\r\n      component: DashboardComponent,\r\n      data: { title: 'Dashboard' },\r\n      canActivate: [AuthGuard]\r\n    },\r\n    {\r\n      path: 'login',\r\n      component: LoginComponent,\r\n      data: { title: 'Login' }\r\n    },\r\n    {\r\n      path: 'article/add',\r\n      component: AddArticleComponent,\r\n      data: { title: 'Add knowledge Base Article' }\r\n    },\r\n    {\r\n      path: 'article/edit/:id',\r\n      component: EditArticleComponent,\r\n      data: { title: 'Edit Knowledge Base Article' }\r\n    },\r\n    { path: 'user/add',\r\n      component: AddUserComponent,\r\n      data: { title: 'Add User' }\r\n    },\r\n    { path: 'userlist',\r\n      component: UserListComponent,\r\n      data: { title: 'User List' }\r\n    },\r\n    { path: '',\r\n      redirectTo: '/dashboard',\r\n      pathMatch: 'full'\r\n    },\r\n    { path: 'user/edit/:id',\r\n      component: EditUserComponent,\r\n      data: { title: 'Edit User' }\r\n    },\r\n  ];\r\n\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { enableTracing: true })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app-routing.module.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<app-left-panel></app-left-panel >\\r\\n<router-outlet></router-outlet>\\r\\n<app-footer></app-footer>  \\r\\n\\r\\n      \\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'angula5 template editor';\r\n  constructor() { \r\n    //alert(\"app\");\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { QuillModule } from 'ngx-quill';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { AddArticleComponent } from './add-knowledge-base-article/add.component';\r\nimport { EditArticleComponent } from './edit-knowledge-base-article/edit.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { LoginComponent } from './login/login.component';\r\n//import { InMemoryWebApiModule } from 'angular-in-memory-web-api';\r\nimport { ArticleData } from '../mock/article-data';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AuthGuard } from '../shared/service/helper/auth-guards';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { HttpModule } from '@angular/http';\r\nimport { AddUserComponent } from './add-user/add-user.component';\r\nimport { EditUserComponent } from './edit-user/edit-user.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MainComponent } from './main/main.component';\r\nimport { LeftPanelComponent } from './left-panel/left-panel.component';\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { ContentComponent } from './content/content.component';\r\nimport { UserListComponent } from './user-list/user-list.component';\r\nimport { MaterialModule } from '../shared/material.module';\r\nimport {ToasterModule, ToasterService} from 'angular5-toaster';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    DashboardComponent,\r\n    LoginComponent,\r\n    AddArticleComponent,\r\n    EditArticleComponent,\r\n    AddUserComponent,\r\n    FooterComponent,\r\n    LeftPanelComponent,\r\n    ContentComponent,\r\n    MainComponent,\r\n    UserListComponent,\r\n    EditUserComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    QuillModule,\r\n    HttpClientModule ,\r\n    HttpModule,\r\n    SharedModule.forRoot(),\r\n    //InMemoryWebApiModule.forRoot(ArticleData),\r\n    AppRoutingModule,\r\n    MaterialModule,\r\n    ReactiveFormsModule,\r\n    BrowserAnimationsModule,\r\n    ToasterModule\r\n\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/content/content.component.html\n// module id = ./src/app/content/content.component.html\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/content/content.component.scss\n// module id = ./src/app/content/content.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-content',\r\n  templateUrl: './content.component.html',\r\n  styleUrls: ['./content.component.scss']\r\n})\r\nexport class ContentComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/content/content.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dashboard/dashboard.component.css\n// module id = ./src/app/dashboard/dashboard.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\r\\n  <h1>Dashboard\\r\\n    <a [routerLink]=\\\"['/knowledge-base-content-create']\\\" class=\\\"btn btn-default btn-lg\\\">\\r\\n      <span class=\\\"glyphicon glyphicon-plus\\\" aria-hidden=\\\"true\\\"></span>\\r\\n    </a>\\r\\n  </h1>\\r\\n  <table class=\\\"table\\\">\\r\\n    <thead>\\r\\n      <tr>\\r\\n        <th>Title</th>\\r\\n        <th>Description</th>\\r\\n        <th>Action</th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n      <tr *ngFor=\\\"let kb of knowledge_base_contents\\\">\\r\\n        <td>{{ kb.title }}</td>\\r\\n        <td>{{ kb.description }}</td>\\r\\n        <td><a [routerLink]=\\\"['/article/edit', kb.id]\\\">Edit</a></td>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n  <br/>\\r\\n  <a [routerLink]=\\\"['/article/add']\\\">Add Knowledge Base Article</a>\\r\\n  <br/> <br/>\\r\\n  <a [routerLink]=\\\"['/userlist']\\\">User List</a>\\r\\n  \\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dashboard/dashboard.component.html\n// module id = ./src/app/dashboard/dashboard.component.html\n// module chunks = main","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { KnowledgeBaseArticleService } from '../../shared/service/knowledge-base-article/knowledge-base-article.service';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  knowledge_base_contents: any;\r\n\r\n  constructor(private kbContentService: KnowledgeBaseArticleService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.kbContentService.listKnowledgeBaseArticle().subscribe(\r\n      result => {\r\n        this.knowledge_base_contents = result;\r\n        },\r\n      error => {\r\n        // To Do proper error handling at application level\r\n        // console.log(\"error in api call\");\r\n    }\r\n  );\r\n\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/dashboard.component.ts","module.exports = \"<form  (ngSubmit)=\\\"onSubmit(article)\\\" [formGroup]=\\\"article\\\">\\r\\n<div>\\r\\n  <div>\\r\\n    <label>Title: </label>\\r\\n    <input formControlName=\\\"title\\\" type=\\\"text\\\" placeholder=\\\"Title\\\" />\\r\\n    <div class=\\\"error\\\" \\r\\n    *ngIf=\\\"article.get('title').touched \\r\\n    && article.get('title').hasError('required')\\\">\\r\\n      Title is required\\r\\n    </div>\\r\\n  </div>\\r\\n  <div>\\r\\n    <label>Description: </label>\\r\\n    <quill-editor #description id=\\\"description\\\" style=\\\"height: 300px\\\"\\r\\n    placeholder=\\\"Description\\\"\\r\\n  formControlName=\\\"description\\\"></quill-editor>\\r\\n\\r\\n    <div class=\\\"error\\\" \\r\\n    *ngIf=\\\"article.get('description').touched \\r\\n    && article.get('description').hasError('required')\\\">\\r\\n      Description is required\\r\\n    </div>\\r\\n  </div>\\r\\n  <div>\\r\\n    <button [disabled]=\\\"article.invalid\\\">Save</button>\\r\\n  </div>\\r\\n</div> \\r\\n<div *ngIf=\\\"articleTitle\\\" [ngClass] = \\\"'success'\\\"> {{articleTitle}} created. </div>\\r\\n<div *ngIf=\\\"errorMessage\\\" [ngClass] = \\\"'error'\\\"> {{errorMessage}} </div>\\r\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/edit-knowledge-base-article/edit.component.html\n// module id = ./src/app/edit-knowledge-base-article/edit.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { KnowledgeBaseArticleService } from '../../shared/service/knowledge-base-article/knowledge-base-article.service';\r\nimport { Router } from '@angular/router';\r\nimport { KnowledgeBaseArticle } from '../../shared/modals/knowledge-base-article';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport {ActivatedRoute} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-edit-kb-article',\r\n  templateUrl: './edit.component.html',\r\n  styleUrls: []\r\n})\r\nexport class EditArticleComponent implements OnInit {\r\n\r\n  articles: KnowledgeBaseArticle[];\r\n  errorMessage: String;\r\n  articleTitle: String;\r\n  article: FormGroup;\r\n  articleId: Number;\r\n\r\n\r\n  constructor(\r\n    private kbContentService: KnowledgeBaseArticleService,\r\n    private fb: FormBuilder,\r\n    private activatedRoute: ActivatedRoute\r\n  ) {\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      this.articleId = params['id'];\r\n      if (this.articleId) {\r\n        this.kbContentService.reteriveKnowledgeBaseArticleById(this.articleId).subscribe((article: KnowledgeBaseArticle) => {\r\n          this.article.setValue({\r\n            title: article.title,\r\n            description: article.description\r\n          });\r\n        });\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.article = this.fb.group({\r\n      title: ['', [Validators.required, Validators.minLength(2)]],\r\n     description: ['', Validators.required],\r\n    });\r\n\r\n  }\r\n\r\n\r\n  onSubmit({value, valid}: {value: KnowledgeBaseArticle, valid: boolean }) {\r\n    this.kbContentService.updateKnowledgeBaseArticle(this.articleId, value)\r\n    .subscribe( article => {\r\n                    this.articleTitle = article.title;\r\n         },\r\n                  error => this.errorMessage = <any>error);\r\n\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/edit-knowledge-base-article/edit.component.ts","module.exports = \"\\r\\n\\r\\n<div class=\\\"container\\\">\\r\\n  <toaster-container></toaster-container>  \\r\\n  <div class=\\\"add-heading\\\"><h2 class=\\\"heading-margin\\\">Edit User</h2></div>\\r\\n\\r\\n<form  (ngSubmit)=\\\"onSubmit(user)\\\" [formGroup]=\\\"user\\\">\\r\\n\\r\\n<div class=\\\"example-container\\\">\\r\\n  <mat-form-field>\\r\\n    <input formControlName=\\\"firstName\\\" matInput placeholder=\\\"First Name\\\">\\r\\n  </mat-form-field>\\r\\n  <div class=\\\"error\\\" \\r\\n    *ngIf=\\\"user.get('firstName').touched \\r\\n    && user.get('firstName').hasError('required')\\\">\\r\\n      First Name is required\\r\\n  </div>\\r\\n\\r\\n  <mat-form-field>\\r\\n    <input formControlName=\\\"lastName\\\" matInput placeholder=\\\"Last Name\\\">\\r\\n  </mat-form-field>\\r\\n  <div class=\\\"error\\\" \\r\\n    *ngIf=\\\"user.get('lastName').touched \\r\\n    && user.get('lastName').hasError('required')\\\">\\r\\n      Last Name is required\\r\\n  </div>\\r\\n\\r\\n  <mat-form-field>\\r\\n    <mat-select formControlName=\\\"userRole\\\" placeholder=\\\"Role\\\">\\r\\n        <mat-option value=\\\"\\\">Select</mat-option>\\r\\n        <mat-option value=\\\"user\\\">User</mat-option>\\r\\n        <mat-option value=\\\"manager\\\">Manager</mat-option>\\r\\n        <mat-option value=\\\"admin\\\">Admin</mat-option>\\r\\n    </mat-select>\\r\\n  </mat-form-field>\\r\\n  <div class=\\\"error\\\" \\r\\n    *ngIf=\\\"user.get('userRole').touched \\r\\n    && user.get('userRole').hasError('required')\\\">\\r\\n      Role is required\\r\\n  </div>\\r\\n\\r\\n  <mat-form-field>\\r\\n    <input formControlName=\\\"email\\\" matInput placeholder=\\\"Email\\\" readonly>\\r\\n  </mat-form-field>\\r\\n  <div class=\\\"error\\\" \\r\\n    *ngIf=\\\"user.get('email').touched \\r\\n    && user.get('email').hasError('email')\\\">\\r\\n    Enter full email address, including the '@'.\\r\\n  </div>\\r\\n\\r\\n  <mat-form-field>\\r\\n    <input formControlName=\\\"password\\\" type=\\\"password\\\" matInput placeholder=\\\"Password\\\">\\r\\n  </mat-form-field>\\r\\n  <div class=\\\"error\\\" \\r\\n    *ngIf=\\\"user.get('password').touched \\r\\n    && user.get('password').hasError('required')\\\">\\r\\n      Password is required\\r\\n  </div>\\r\\n  <span *ngIf=\\\"cpwd.hasError('invalid')\\\"> Invalid Password </span>\\r\\n\\r\\n  <mat-form-field>\\r\\n    <input formControlName=\\\"confirmPassword\\\" type=\\\"password\\\" matInput placeholder=\\\"Confirm Password\\\">\\r\\n  </mat-form-field>\\r\\n  <div class=\\\"error\\\" \\r\\n    *ngIf=\\\"user.get('confirmPassword').touched \\r\\n    && user.get('confirmPassword').hasError('required')\\\">\\r\\n      Confirm Password is required\\r\\n  </div>\\r\\n  <div class=\\\"error\\\" \\r\\n    *ngIf=\\\"user.get('confirmPassword').touched \\r\\n    && user.get('confirmPassword').hasError('notEquivalent')\\\">\\r\\n      Password and Confirm Password should match\\r\\n  </div>\\r\\n<div class=\\\"button-postion\\\">\\r\\n  <button type=\\\"button\\\" mat-raised-button (click)=\\\"onDeactivate()\\\">Deactivate</button>\\r\\n  <button type=\\\"button\\\" mat-raised-button (click)=\\\"onCancle()\\\">Cancel</button>\\r\\n  <button mat-raised-button type=\\\"submit\\\">Save</button>\\r\\n</div>\\r\\n  <div *ngIf=\\\"userName\\\" [ngClass] = \\\"'success'\\\"> {{userName}} created. </div>\\r\\n</div>\\r\\n</form>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/edit-user/edit-user.component.html\n// module id = ./src/app/edit-user/edit-user.component.html\n// module chunks = main","module.exports = \".example-container {\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column;\\n  background-color: #f2f2f2;\\n  padding: 20px;\\n  -webkit-box-shadow: 0px 5px 8px rgba(0, 0, 0, 0.3);\\n          box-shadow: 0px 5px 8px rgba(0, 0, 0, 0.3);\\n  float: left; }\\n\\n.heading-margin {\\n  margin: 0px; }\\n\\n.mat-form-field {\\n  width: 45%;\\n  margin-right: 26px; }\\n\\n.button-postion {\\n  float: right; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/edit-user/edit-user.component.scss\n// module id = ./src/app/edit-user/edit-user.component.scss\n// module chunks = main","import { Component, OnInit, ViewChild  } from '@angular/core';\r\nimport { UserService } from '../../shared/service/user/user.service';\r\nimport { Router } from '@angular/router';\r\nimport { User } from '../../shared/modals/user';\r\nimport { AbstractControl, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {ToasterModule, ToasterService} from 'angular5-toaster';\r\n\r\n@Component({\r\n  selector: 'app-edit-user',\r\n  templateUrl: './edit-user.component.html',\r\n  styleUrls: ['./edit-user.component.scss']\r\n})\r\n\r\nexport class EditUserComponent implements OnInit {\r\n\r\n  users: User[];\r\n  errorMessage: String;\r\n  userName: String;\r\n  user: FormGroup;\r\n  userId: String;\r\n\r\n\r\n  get cpwd() {\r\n    return this.user.get('confirmPassword');\r\n   }\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    private toasterService: ToasterService\r\n\r\n  ) {\r\n\r\n    this.activatedRoute.params.subscribe((params: any) => {\r\n      this.userId = params['id'];\r\n      if (this.userId) {\r\n        this.userService.reteriveUserById(this.userId).subscribe((data: any) => {\r\n          this.user.setValue({\r\n            firstName: data.user.firstName,\r\n            lastName: data.user.lastName,\r\n            email: data.user.email,\r\n            password: data.user.password,\r\n            confirmPassword: data.user.password,\r\n            userRole: data.user.userRole\r\n          });\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.user = this.fb.group({\r\n      firstName: ['', [Validators.required, Validators.minLength(2)]],\r\n      lastName: ['', Validators.required],\r\n      password: ['', Validators.required],\r\n      userRole: ['', Validators.required],\r\n      email: ['', Validators.email],\r\n      confirmPassword: ['', Validators.required],\r\n    }, {validator: this.validateConfirmPassword('password', 'confirmPassword')});\r\n\r\n  }\r\n\r\n  validateConfirmPassword(passwordKey: string, passwordConfirmationKey: string) {\r\n    return (group: FormGroup) => {\r\n      const passwordInput = group.controls[passwordKey],\r\n          passwordConfirmationInput = group.controls[passwordConfirmationKey];\r\n      if (passwordInput.value !== passwordConfirmationInput.value) {\r\n        return passwordConfirmationInput.setErrors({notEquivalent: true});\r\n      }\r\n        return passwordConfirmationInput.setErrors(null);\r\n    };\r\n  }\r\n\r\n  onSubmit({value, valid}: {value: any, valid: boolean }) {\r\n    delete value.confirmPassword;\r\n    this.userService.updateUser(this.userId, value)\r\n    .subscribe( data => {\r\n                    this.toasterService.pop('success', 'Success', data.success.message);\r\n         },\r\n                  error => this.toasterService.pop('error', 'Error', error.failure.message));\r\n  }\r\n\r\n  onCancle() {\r\n    this.router.navigateByUrl('/userlist');\r\n  }\r\n\r\n  onDeactivate() {\r\n    if (confirm('Are you sure to deactivate user ? ' + name)) {\r\n      this.userService.deleteUser(this.userId)\r\n    .subscribe( data => {\r\n                    this.toasterService.pop('success', 'Success', data.success.message);\r\n         },\r\n                  error => this.toasterService.pop('error', 'Error', error.failure.message));\r\n      }\r\n    }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/edit-user/edit-user.component.ts","module.exports = \"<!--<div class=\\\"footer\\\">\\r\\n    <a href=\\\"#\\\"> Term & Conditions </a>\\r\\n    <a href=\\\"#\\\">  Privacy policay </a><span>  @copyright 2018</span>\\r\\n  </div>-->  \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/footer/footer.component.html\n// module id = ./src/app/footer/footer.component.html\n// module chunks = main","module.exports = \".footer {\\n  color: #fff;\\n  background-color: #111;\\n  text-align: center;\\n  font-size: 12px;\\n  padding: 1px;\\n  position: absolute;\\n  bottom: 0;\\n  right: 0;\\n  width: 100%; }\\n\\n.footer a {\\n  color: white; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/footer/footer.component.scss\n// module id = ./src/app/footer/footer.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.scss']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/footer/footer.component.ts","module.exports = \"<div class=\\\"sidenav\\\" *ngIf=\\\"isAuthenticated()\\\">\\r\\n    <div class=\\\"user-profile\\\">\\r\\n      <div class=\\\"user-image\\\">\\r\\n     <a (click)=\\\"onTapNavigation('')\\\"> <img src=\\\"https://upload.wikimedia.org/wikipedia/commons/c/c3/Circle-icons-camera.svg\\\" class=\\\"circle\\\"></a>\\r\\n      </div>\\r\\n      <div class=\\\"user-information\\\">\\r\\n     <span class=\\\"user\\\"><a>{{ getUserName() }}</a></span>\\r\\n     <span class=\\\"user-logout\\\"><a (click)=\\\"logout();\\\"> Logout</a></span>\\r\\n      </div>\\r\\n     </div>\\r\\n     <div class=\\\"sidenav-menu\\\">\\r\\n       <ul class=\\\"menu-list\\\">\\r\\n         <li>\\r\\n             <a (click)=\\\"onTapNavigation('')\\\">\\r\\n             <img src=\\\"https://upload.wikimedia.org/wikipedia/commons/c/c3/Circle-icons-camera.svg\\\" class=\\\"menu-icon\\\">\\r\\n             <span>Search</span>\\r\\n             </a>\\r\\n         </li>\\r\\n         <li>\\r\\n             <a (click)=\\\"onTapNavigation('')\\\">\\r\\n             <img src=\\\"https://upload.wikimedia.org/wikipedia/commons/c/c3/Circle-icons-camera.svg\\\" class=\\\"menu-icon\\\">\\r\\n             <span>Knowledge Base</span>\\r\\n             </a>\\r\\n         </li>\\r\\n         <li *ngIf=\\\"userType === 'admin' || userType === 'manager'\\\">\\r\\n             <a (click)=\\\"onTapNavigation('')\\\">\\r\\n             <img src=\\\"https://upload.wikimedia.org/wikipedia/commons/c/c3/Circle-icons-camera.svg\\\" class=\\\"menu-icon\\\">\\r\\n             <span>Dashboard</span>\\r\\n             </a>\\r\\n         </li>\\r\\n         <li>\\r\\n             <a (click)=\\\"onTapNavigation('')\\\">\\r\\n             <img src=\\\"https://upload.wikimedia.org/wikipedia/commons/c/c3/Circle-icons-camera.svg\\\" class=\\\"menu-icon\\\">\\r\\n             <span>Content</span>\\r\\n             </a>\\r\\n         </li>\\r\\n         <li class=\\\"submenubar\\\">\\r\\n             <a>\\r\\n               <img src=\\\"https://upload.wikimedia.org/wikipedia/commons/c/c3/Circle-icons-camera.svg\\\" class=\\\"menu-icon\\\">\\r\\n               <span>Settings</span>\\r\\n             </a>\\r\\n             <ul class=\\\"menu-sub_list\\\">\\r\\n               <li *ngIf=\\\"userType === 'admin' || userType === 'manager'\\\">            \\r\\n                 <a (click)=\\\"onTapNavigation('/userlist')\\\">User</a>\\r\\n               </li>\\r\\n               <li>  \\r\\n                   <a (click)=\\\"onTapNavigation('')\\\">Profile</a>\\r\\n               </li>\\r\\n               <li> \\r\\n                   <a (click)=\\\"onTapNavigation('')\\\">Google Tanslater</a>\\r\\n               </li>     \\r\\n             </ul>              \\r\\n         </li>\\r\\n         <li>\\r\\n             <a (click)=\\\"onTapNavigation('')\\\">\\r\\n               <img src=\\\"https://upload.wikimedia.org/wikipedia/commons/c/c3/Circle-icons-camera.svg\\\" class=\\\"menu-icon\\\">\\r\\n               <span>Help</span>\\r\\n             </a>\\r\\n         </li>\\r\\n       </ul>\\r\\n     </div>\\r\\n   </div>\\r\\n   <!--<div class=\\\"main\\\">\\r\\n       <div class=\\\"content-box\\\">\\r\\n         <div class=\\\"some-header\\\">\\r\\n           Something\\r\\n         </div> \\r\\n        </div>\\r\\n      </div>-->\\r\\n        \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/left-panel/left-panel.component.html\n// module id = ./src/app/left-panel/left-panel.component.html\n// module chunks = main","module.exports = \"html, body {\\n  height: auto; }\\n\\nbody {\\n  font-size: 1.7rem; }\\n\\n/* For the Side navigation.........................*/\\n\\n.sidenav {\\n  height: 100%;\\n  width: 20%;\\n  position: fixed;\\n  z-index: 1;\\n  top: 0;\\n  left: 0;\\n  background-color: #111;\\n  overflow-x: hidden; }\\n\\n.user-profile {\\n  float: left;\\n  width: 100%;\\n  border-bottom: 1px solid white;\\n  padding: 15px 0px;\\n  background-color: #332e2e; }\\n\\n.user-image {\\n  display: inline;\\n  float: left;\\n  width: 21%;\\n  margin-right: 6px;\\n  margin-left: 6px; }\\n\\n.user-information {\\n  float: left;\\n  width: 72%;\\n  display: inline;\\n  padding-top: 10px; }\\n\\n.circle {\\n  height: 50px;\\n  width: 50px; }\\n\\n.user {\\n  display: block; }\\n\\n.user a {\\n  color: white; }\\n\\n.user-logout a {\\n  color: #0071bc; }\\n\\n/* for the menu items..................*/\\n\\n.menu-list {\\n  margin-top: 0;\\n  margin-bottom: 0;\\n  list-style-type: none;\\n  padding-left: 0;\\n  border-bottom: 1px solid;\\n  border-top: 1px solid; }\\n\\nul {\\n  margin-top: 1em;\\n  margin-bottom: 1em; }\\n\\n.sidenav-menu {\\n  float: left;\\n  width: 100%; }\\n\\n.sidenav-menu ul {\\n  list-style-type: none;\\n  margin-left: 0px; }\\n\\n.menu-list > li:first-child {\\n  border-top: none; }\\n\\n.menu-list > li {\\n  background-color: transparent;\\n  border-top: 1px solid #5b616b;\\n  font-size: 1.2rem; }\\n\\n.menu-list > li {\\n  margin-bottom: 0; }\\n\\nli {\\n  line-height: 1.5; }\\n\\n.menu-icon {\\n  width: 20px;\\n  height: 20px;\\n  padding-right: 10px; }\\n\\n.menu-list a {\\n  border: none;\\n  color: #fff;\\n  display: block;\\n  line-height: 1.3;\\n  padding: 0.85rem 1rem 0.85rem 1rem; }\\n\\n.menu-list a:hover {\\n  background-color: #f1f1f1;\\n  border-left: 0.4rem solid #0071bc;\\n  color: #0071bc; }\\n\\n/* for sublist...............*/\\n\\n.submenubar ul {\\n  display: none; }\\n\\n.submenubar:hover ul {\\n  display: block; }\\n\\n.menu-sub_list {\\n  margin-top: 0;\\n  margin-bottom: 0;\\n  list-style-type: none;\\n  padding-left: 0;\\n  margin: 0;\\n  width: 100%; }\\n\\n/* ending the side navbar .......*/\\n\\n/* content box..............................*/\\n\\n.main {\\n  margin-left: 250px;\\n  /* Same as the width of the sidenav */ }\\n\\n.content-box {\\n  margin: 20px; }\\n\\n.some-header {\\n  background-color: #191919;\\n  color: white;\\n  padding: 20px; }\\n\\n.content {\\n  margin: 20px; }\\n\\n/* media quary.............*/\\n\\n@media screen and (min-width: 1201px) {\\n  .menu-list {\\n    border-bottom: none;\\n    border-top: none; } }\\n\\n@media screen and (max-height: 450px) {\\n  .sidenav {\\n    padding-top: 15px; }\\n  .sidenav a {\\n    font-size: 16px; } }\\n\\na {\\n  cursor: pointer; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/left-panel/left-panel.component.scss\n// module id = ./src/app/left-panel/left-panel.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { AuthenticationService } from '../../shared/service/authentication/authentication.service';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs/Subscription';\r\n \r\nimport { MessageService } from '../../shared/service/message/message';\r\n\r\n\r\n@Component({\r\n  selector: 'app-left-panel',\r\n  templateUrl: './left-panel.component.html',\r\n  styleUrls: ['./left-panel.component.scss']\r\n})\r\nexport class LeftPanelComponent implements OnInit {\r\n\r\n  userType : any;\r\n  subscription: Subscription;\r\n\r\n  constructor(private auth: AuthenticationService, private router: Router,private messageService: MessageService) { \r\n     this.userType = this.auth.getUserType(); \r\n     this.subscription = this.messageService.getMessage().subscribe(message => { \r\n        this.userType = this.auth.getUserType();\r\n     });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n      // unsubscribe to ensure no memory leaks\r\n      this.subscription.unsubscribe();\r\n  }\r\n\r\n  ngOnInit() {\r\n    \r\n  }\r\n\r\n  refreshUserType() {\r\n    this.userType = this.auth.getUserType();\r\n  }\r\n\r\n  onTapNavigation(route) {\r\n    this.router.navigate([route]);\r\n  }\r\n\r\n  isAuthenticated() {\r\n    return this.auth.isAuthenticated();\r\n  }\r\n\r\n  getUserName() {\r\n    return this.auth.getUserName();\r\n  }\r\n\r\n  logout() {\r\n    this.auth.logout();\r\n    this.onTapNavigation('/login');\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/left-panel/left-panel.component.ts","module.exports = \"\\r\\n<toaster-container></toaster-container>\\r\\n<div class=\\\"app-header\\\">\\r\\n    <h1 class=\\\"heading \\\">Login</h1>\\r\\n</div>\\r\\n<!-- Application header ends -->\\r\\n <div class=\\\"login-body\\\">\\r\\n<mat-grid-list cols=\\\"3\\\">\\r\\n    <mat-grid-tile></mat-grid-tile>\\r\\n \\r\\n    <!-- Writing markup for login starts -->\\r\\n    <mat-grid-tile class='login-element'>\\r\\n        <div class=\\\"login-container\\\">\\r\\n \\r\\n            <!-- Template Header starts -->\\r\\n            <div class=\\\"login-box-header\\\">\\r\\n                <h2>Login </h2>\\r\\n                \\r\\n            </div>\\r\\n            <!-- Template Header ends -->\\r\\n \\r\\n            <!-- Template Body starts -->\\r\\n            <div class=\\\"login-box-body \\\">\\r\\n                <form class=\\\"example-form\\\" name=\\\"form\\\" >\\r\\n                    <mat-form-field class=\\\"example-full-width\\\">\\r\\n                        <label>Email</label> \\r\\n                        <input matInput type=\\\"email\\\" name=\\\"username\\\" [(ngModel)]=\\\"model.username\\\" #username=\\\"ngModel\\\" required>\\r\\n                    </mat-form-field>\\r\\n\\r\\n                    <mat-form-field class=\\\"example-full-width\\\">\\r\\n                        <label>Password</label>\\r\\n                        <input matInput type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" [(ngModel)]=\\\"model.password\\\" #password=\\\"ngModel\\\" required>\\r\\n                    </mat-form-field>\\r\\n                    <div class=\\\"login-forgot\\\">\\r\\n                        <a href='#'> Forgot Password</a>\\r\\n                    </div>\\r\\n                    <div class=\\\"login-button\\\" (click)=\\\"login()\\\">\\r\\n                        <button mat-raised-button color=\\\"primary\\\" class=\\\"login-button\\\">\\r\\n                          Login\\r\\n                         </button>\\r\\n                    </div>\\r\\n            </form> \\r\\n        </div>\\r\\n            \\r\\n            \\r\\n            <!-- Template Body ends -->\\r\\n            \\r\\n        </div>\\r\\n    </mat-grid-tile>\\r\\n    <!-- Writing markup for login ends -->\\r\\n    <mat-grid-tile></mat-grid-tile>\\r\\n \\r\\n</mat-grid-list>\\r\\n</div>\\r\\n\\r\\n<!-- Application footer starts -->\\r\\n<div class=\\\"footer\\\">\\r\\n        <a href=\\\"#\\\"> Term & Conditions </a>\\r\\n        <a href=\\\"#\\\">  Privacy policay </a><span>  @copyright 2018</span>\\r\\n      </div> \\r\\n<!-- Application footer ends -->\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/login.component.html\n// module id = ./src/app/login/login.component.html\n// module chunks = main","module.exports = \"/*\\r\\nLogin template using Angular Material\\r\\n\\r\\n*/\\n.app-header {\\n  color: #fff;\\n  background-color: #000000;\\n  text-align: center;\\n  padding: 14px; }\\n.login-body {\\n  margin-top: 40px; }\\n.login-container {\\n  width: 100%;\\n  height: 450px;\\n  padding: 0%;\\n  background-color: #fff;\\n  -webkit-box-shadow: 2px 4px 58px -20px black;\\n  box-shadow: 2px 4px 58px -20px black; }\\n.login-box-header {\\n  width: auto;\\n  height: 17%;\\n  background-color: #1f8edc;\\n  text-align: center;\\n  vertical-align: middle;\\n  font-size: 1em;\\n  padding: 2%;\\n  color: #fff; }\\n.login-button {\\n  padding: 1%;\\n  font-size: 1em;\\n  color: #fff; }\\n.example-form {\\n  padding: 10px; }\\n.example-full-width {\\n  width: 100%; }\\n/* footer.............*/\\n.footer {\\n  color: #fff;\\n  background-color: #111;\\n  text-align: center;\\n  font-size: 12px;\\n  padding: 8px;\\n  position: absolute;\\n  bottom: 0;\\n  right: 0;\\n  width: 100%; }\\n.footer a {\\n  color: white;\\n  text-decoration: none; }\\n.login-box-body {\\n  margin: 0px 35px 0px 20px; }\\n.login-box-body input {\\n  padding: 10px;\\n  margin-top: 10px; }\\n.login-forgot {\\n  margin-bottom: 10px; }\\n.login-forgot a {\\n  text-decoration: none; }\\n.mat-raised-button.mat-primary {\\n  background-color: #1f8edc !important; }\\n.heading {\\n  margin: 0; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/login.component.scss\n// module id = ./src/app/login/login.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthenticationService } from '../../shared/service/authentication/authentication.service';\r\nimport {ToasterModule, ToasterService} from 'angular5-toaster';\r\nimport { MessageService } from '../../shared/service/message/message';\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  model: any = {};\r\n  loading = false;\r\n\r\n  constructor(\r\n      private router: Router, \r\n      private toasterService: ToasterService,\r\n      private messageService: MessageService,\r\n      private authenticationService: AuthenticationService) { \r\n\r\n      }\r\n\r\n    ngOnInit() {\r\n       \r\n    }\r\n\r\n    login() {\r\n        this.loading = true;\r\n        this.authenticationService.login(this.model.username, this.model.password)\r\n            .subscribe(\r\n                data => {\r\n                    console.log(data);\r\n                    this.messageService.sendMessage('set user type');\r\n                    this.router.navigate(['/dashboard']);\r\n                },\r\n                error => {\r\n                    this.loading = false;\r\n                    this.toasterService.pop('error', 'Error', 'Username or password is incorrect');\r\n                });\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/login/login.component.ts","module.exports = \"<p>\\r\\n  main works!\\r\\n</p>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main/main.component.html\n// module id = ./src/app/main/main.component.html\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main/main.component.scss\n// module id = ./src/app/main/main.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-main',\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.scss']\r\n})\r\nexport class MainComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main/main.component.ts","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"add-user-button\\\"><a (click)=\\\"onTapNavigation('/user/add')\\\">Add User</a></div>\\r\\n  <div class=\\\"Container-table\\\">\\r\\n    <div class=\\\"add-heading\\\"><h2 class=\\\"heading-margin\\\">User Settings</h2></div>\\r\\n    <div class=\\\"example-container\\\">\\r\\n    <!-- <table class=\\\"table\\\">\\r\\n    <thead>\\r\\n      <tr>\\r\\n        <th>First Name</th>\\r\\n        <th>Last Name</th>\\r\\n        <th>Email</th>\\r\\n        <th>Role</th>\\r\\n        <th>Action</th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n      <tr *ngFor=\\\"let user of listOfUsers\\\">\\r\\n        <td> {{ user.firstName }}</td>\\r\\n        <td> {{ user.lastName }}</td>\\r\\n        <td> {{ user.email }}</td>\\r\\n        <td> {{ user.userRole }}</td>\\r\\n        <td><a [routerLink]=\\\"['/user/edit', user.id]\\\">Edit</a></td>\\r\\n      </tr>\\r\\n     </tbody> \\r\\n  </table>-->\\r\\n\\r\\n  <div class=\\\"example-header\\\">\\r\\n    <mat-form-field>\\r\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n  \\r\\n  <div class=\\\"example-container-1 mat-elevation-z8\\\">\\r\\n  \\r\\n    <mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n  \\r\\n      <!-- ID Column -->\\r\\n      <ng-container matColumnDef=\\\"name\\\">\\r\\n        <mat-header-cell *matHeaderCellDef mat-sort-header> Name </mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let row\\\"> {{row.firstName}} {{row.lastName}} </mat-cell>\\r\\n      </ng-container>\\r\\n  \\r\\n      <!-- Progress Column -->\\r\\n      <ng-container matColumnDef=\\\"email\\\">\\r\\n        <mat-header-cell *matHeaderCellDef mat-sort-header> Email </mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let row\\\"> {{row.email}} </mat-cell>\\r\\n      </ng-container>\\r\\n  \\r\\n      <!-- Name Column -->\\r\\n      <ng-container matColumnDef=\\\"role\\\">\\r\\n        <mat-header-cell *matHeaderCellDef mat-sort-header> Role </mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let row\\\"> {{row.userRole}} </mat-cell>\\r\\n      </ng-container>\\r\\n\\r\\n       <!-- status Column -->\\r\\n       <ng-container matColumnDef=\\\"status\\\">\\r\\n          <mat-header-cell *matHeaderCellDef mat-sort-header> Status </mat-header-cell>\\r\\n          <mat-cell *matCellDef=\\\"let row\\\"> {{row.status}} </mat-cell>\\r\\n        </ng-container>\\r\\n  \\r\\n      <!-- Color Column -->\\r\\n      <ng-container matColumnDef=\\\"actions\\\">\\r\\n        <mat-header-cell *matHeaderCellDef mat-sort-header> Actions </mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let row\\\"><a [routerLink]=\\\"['/user/edit', row.id]\\\">Edit</a></mat-cell>\\r\\n      </ng-container>\\r\\n  \\r\\n      <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n      <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\r\\n      </mat-row>\\r\\n    </mat-table>\\r\\n  \\r\\n    <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\r\\n  </div>\\r\\n\\r\\n  </div>\\r\\n </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/user-list/user-list.component.html\n// module id = ./src/app/user-list/user-list.component.html\n// module chunks = main","module.exports = \".example-container {\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column;\\n  background-color: #fbfbfb;\\n  padding: 20px;\\n  -webkit-box-shadow: 0px 5px 8px rgba(0, 0, 0, 0.3);\\n          box-shadow: 0px 5px 8px rgba(0, 0, 0, 0.3); }\\n\\n.heading-margin {\\n  margin: 0px; }\\n\\n.table {\\n  width: 100%;\\n  text-align: left; }\\n\\nth, td {\\n  padding: 5px; }\\n\\ntable, th, td {\\n  border: 1px solid #cccaca;\\n  border-collapse: collapse; }\\n\\ntable tr:nth-child(even) {\\n  background-color: #eee; }\\n\\ntable tr:nth-child(odd) {\\n  background-color: #fff; }\\n\\n.add-user-button {\\n  float: right;\\n  margin: 19px 0 10px 0; }\\n\\n.add-user-button a {\\n  text-decoration: none;\\n  padding: 10px 21px;\\n  background-color: #ffa834;\\n  display: block;\\n  color: #fff; }\\n\\n.Container-table {\\n  float: left;\\n  width: 100%; }\\n\\n.example-container-1 {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column;\\n  min-width: 300px; }\\n\\n.example-header {\\n  min-height: 64px;\\n  padding: 8px 24px 0; }\\n\\n.mat-form-field {\\n  font-size: 14px;\\n  width: 100%; }\\n\\n.mat-table {\\n  overflow: auto;\\n  max-height: 500px; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/user-list/user-list.component.scss\n// module id = ./src/app/user-list/user-list.component.scss\n// module chunks = main","import {Component, ViewChild, OnInit} from '@angular/core';\r\nimport {MatPaginator, MatSort, MatTableDataSource} from '@angular/material';\r\nimport { UserService } from '../../shared/service/user/user.service';\r\nimport { User } from '../../shared/modals/user';\r\nimport { Router } from '@angular/router';\r\n\r\n/**\r\n * @title Data table with sorting, pagination, and filtering.\r\n */\r\n@Component({\r\n    selector: 'app-user-list',\r\n    templateUrl: './user-list.component.html',\r\n    styleUrls: ['./user-list.component.scss']\r\n})\r\n\r\nexport class UserListComponent implements OnInit {\r\n  displayedColumns = ['name', 'email', 'role', 'actions'];\r\n  dataSource: MatTableDataSource<User>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(private userService: UserService, private router: Router) {\r\n    \r\n  }\r\n\r\n    ngOnInit() {\r\n        this.getUserList();\r\n    }\r\n\r\n    getUserList() {\r\n        this.userService.listUser()\r\n        .subscribe(\r\n            data => {\r\n                this.createData(data.users);\r\n            },\r\n            error => {\r\n                // Need to perform\r\n            });\r\n    }\r\n\r\n    onTapNavigation(route) {\r\n        this.router.navigate([route]);\r\n    }\r\n\r\n    createData(data) {\r\n        const users: User[] = [];\r\n        for (let i = 0; i < data.length; i++) \r\n        { \r\n            users.push(this.createNewUser(data[i])); \r\n        }\r\n\r\n        this.dataSource = new MatTableDataSource(users);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n    }\r\n\r\n  applyFilter(filterValue: string) {\r\n    filterValue = filterValue.trim(); // Remove whitespace\r\n    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\r\n    this.dataSource.filter = filterValue;\r\n  }\r\n\r\n  createNewUser(item:any): User {\r\n    return {\r\n        id: item.id,\r\n        firstName: item.firstName,\r\n        lastName: item.lastName,\r\n        email: item.email,\r\n        password: item.password,\r\n        userRole : item.userRole\r\n    };\r\n   }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/user-list/user-list.component.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  API_ENDPOINT: 'http://localhost:8080/api/',\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpResponse, HttpHandler, HttpEvent, HttpInterceptor, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/observable/of';\r\nimport 'rxjs/add/observable/throw';\r\nimport 'rxjs/add/operator/delay';\r\nimport 'rxjs/add/operator/mergeMap';\r\nimport 'rxjs/add/operator/materialize';\r\nimport 'rxjs/add/operator/dematerialize';\r\nimport { UserData } from './user-data';\r\n \r\n@Injectable()\r\nexport class FakeBackendInterceptor implements HttpInterceptor {\r\n \r\n    constructor() { }\r\n \r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        // array in local storage for registered users\r\n        let users: any[] = [{ username: 'test', password: 'test', firstName: 'Test', lastName: 'User' }];\r\n \r\n        // wrap in delayed observable to simulate server api call\r\n        return Observable.of(null).mergeMap(() => {\r\n \r\n            // authenticate\r\n            /*if (request.url.endsWith('/mock/api/users/login') && request.method === 'POST') {\r\n                console.log(request);\r\n            \r\n                let filteredUsers = users.filter(user => {\r\n                    return user.username === request.body.username && user.password === request.body.password;\r\n                });\r\n \r\n                if (filteredUsers.length) {\r\n                    let user = filteredUsers[0];\r\n                    let body = {\r\n                        id: user.id,\r\n                        username: user.username,\r\n                        firstName: user.firstName,\r\n                        lastName: user.lastName,\r\n                        token: 'fake-jwt-token'\r\n                    };\r\n \r\n                    return Observable.of(new HttpResponse({ status: 200, body: body }));\r\n                } else {\r\n                    return Observable.throw('Username or password is incorrect');\r\n                }\r\n            }*/\r\n \r\n            // get users\r\n            /*if (request.url.endsWith('api/users') && request.method === 'GET') {\r\n                // check for fake auth token in header and return users if valid, this security is implemented server side in a real application\r\n                if (request.headers.get('Authorization') === 'Bearer fake-jwt-token') {\r\n                    return Observable.of(new HttpResponse({ status: 200, body: UserData.listOfUser() }));\r\n                } else {\r\n                    // return 401 not authorised if token is null or invalid\r\n                    return Observable.throw('Unauthorised');\r\n                }\r\n            }*/\r\n \r\n            // get user by id\r\n            /*if (request.url.match(/\\/api\\/users\\/\\d+$/) && request.method === 'GET') {\r\n                // check for fake auth token in header and return user if valid, this security is implemented server side in a real application\r\n                if (request.headers.get('Authorization') === 'Bearer fake-jwt-token') {\r\n                    // find user by id in users array\r\n                    let urlParts = request.url.split('/');\r\n                    let id = parseInt(urlParts[urlParts.length - 1]);\r\n                    let matchedUsers = users.filter(user => { return user.id === id; });\r\n                    let user = matchedUsers.length ? matchedUsers[0] : null;\r\n \r\n                    return Observable.of(new HttpResponse({ status: 200, body: user }));\r\n                } else {\r\n                    // return 401 not authorised if token is null or invalid\r\n                    return Observable.throw('Unauthorised');\r\n                }\r\n            }*/\r\n \r\n            // pass through any requests not handled above\r\n            return next.handle(request);\r\n             \r\n        })\r\n \r\n        // call materialize and dematerialize to ensure delay even if an error is thrown (https://github.com/Reactive-Extensions/RxJS/issues/648)\r\n        .materialize()\r\n        .delay(500)\r\n        .dematerialize();\r\n    }\r\n}\r\n \r\nexport let fakeBackendProvider = {\r\n    // use fake backend in place of Http service for backend-less development\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: FakeBackendInterceptor,\r\n    multi: true\r\n};\n\n\n// WEBPACK FOOTER //\n// ./src/mock/fake-backend.ts","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class UserData {\r\n\r\n   constructor() { }\r\n\r\n    static users : Object =  {\r\n      \"meta\": {\r\n        \"current_page\":1,\r\n        \"total_pages\": 10\r\n      },\r\n      \"users\": [\r\n        {\r\n          \"id\": 100,\r\n          \"date_joined\": 1519363687246,\r\n          \"last_login\": 1519363687246,\r\n          \"first_name\": \"John\",\r\n          \"last_name\": \"Doe\",\r\n          \"email\": \"john.doe@email.com\",\r\n          \"user_role\": \"manager\"\r\n        },\r\n        {\r\n          \"id\": 101,\r\n          \"date_joined\": 1519363687246,\r\n          \"last_login\": 1519363687246,\r\n          \"first_name\": \"Jane\",\r\n          \"last_name\": \"Doe\",\r\n          \"email\": \"jane.doe@email.com\",\r\n          \"user_role\": \"user\"\r\n        }\r\n      ]\r\n    }\r\n     \r\n    static listOfUser() {\r\n      return this.users;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/mock/user-data.ts","\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport {\r\n    MatAutocompleteModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatStepperModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatFormFieldModule,\r\n  } from '@angular/material';\r\n\r\n  @NgModule({\r\n    exports: [\r\n      CdkTableModule,\r\n      MatAutocompleteModule,\r\n      MatButtonModule,\r\n      MatButtonToggleModule,\r\n      MatCardModule,\r\n      MatCheckboxModule,\r\n      MatChipsModule,\r\n      MatStepperModule,\r\n      MatDatepickerModule,\r\n      MatDialogModule,\r\n      MatDividerModule,\r\n      MatExpansionModule,\r\n      MatGridListModule,\r\n      MatIconModule,\r\n      MatInputModule,\r\n      MatListModule,\r\n      MatMenuModule,\r\n      MatNativeDateModule,\r\n      MatPaginatorModule,\r\n      MatProgressBarModule,\r\n      MatProgressSpinnerModule,\r\n      MatRadioModule,\r\n      MatRippleModule,\r\n      MatSelectModule,\r\n      MatSidenavModule,\r\n      MatSliderModule,\r\n      MatSlideToggleModule,\r\n      MatSnackBarModule,\r\n      MatSortModule,\r\n      MatTableModule,\r\n      MatTabsModule,\r\n      MatToolbarModule,\r\n      MatTooltipModule,\r\n      MatFormFieldModule\r\n    ],\r\n    declarations: []\r\n  })\r\n  export class MaterialModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/material.module.ts","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport 'rxjs/add/operator/map';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n@Injectable()\r\nexport class AuthenticationService {\r\n    public token: string;\r\n\r\n    constructor(private http: HttpClient) {\r\n\r\n    }\r\n\r\n    login(username: string, password: string) {\r\n        return this.http.post<any>(environment.API_ENDPOINT + 'login', { email: username, password: password })\r\n            .map(user => {\r\n                // login successful if there's a jwt token in the response\r\n                if (user && user.accessToken) {\r\n                    // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n                    localStorage.setItem('currentUser', JSON.stringify(user));\r\n                }\r\n\r\n                return user;\r\n            });\r\n    }\r\n\r\n    logout(): void {\r\n        // clear token remove user from local storage to log user out\r\n        this.token = null;\r\n        localStorage.removeItem('currentUser');\r\n    }\r\n\r\n    isAuthenticated(): boolean {\r\n        const currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n         if (currentUser && currentUser.accessToken) {\r\n             return true;\r\n         }\r\n         return false;\r\n    }\r\n\r\n    getUserName(): string {\r\n        const currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n         if (currentUser && currentUser.user && currentUser.accessToken) {\r\n             return currentUser.user.firstName + ' ' + currentUser.user.lastName;\r\n         }\r\n         return null;\r\n    }\r\n\r\n    getUserType(): string {\r\n        const currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n         if (currentUser && currentUser.user && currentUser.user.userRole) {\r\n             return currentUser.user.userRole;\r\n         }\r\n         return undefined;\r\n    }\r\n\r\n    getAccessToken(): string {\r\n        const currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n         if (currentUser && currentUser.accessToken) {\r\n             return currentUser.accessToken;\r\n         }\r\n         return null;\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/shared/service/authentication/authentication.service.ts","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n\r\n    constructor(private router: Router) { }\r\n\r\n    canActivate() {\r\n        if (localStorage.getItem('currentUser')) {\r\n            // logged in so return true\r\n            return true;\r\n        }\r\n\r\n        // not logged in so redirect to login page\r\n        this.router.navigate(['/login']);\r\n        return false;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/shared/service/helper/auth-guards.ts","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        // add authorization header with jwt token if available\r\n        let currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n        if (currentUser && currentUser.accessToken) {\r\n            request = request.clone({\r\n                setHeaders: { \r\n                    Authorization: currentUser.accessToken\r\n                }\r\n            });\r\n        }\r\n\r\n        return next.handle(request);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/shared/service/helper/jwt-interceptor.ts","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { KnowledgeBaseArticle } from '../.././modals/knowledge-base-article';\r\nimport { of } from 'rxjs/observable/of';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport 'rxjs/add/operator/catch';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n\r\n/**\r\n * This class provides the Knowledgebase content service with methods to manage.\r\n */\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable()\r\nexport class KnowledgeBaseArticleService {\r\n\r\n  /**\r\n   * Creates a new KnowledgeBaseContentervice with the injected HttpClient.\r\n   * @param {HttpClient} http - The injected HttpClient.\r\n   * @constructor\r\n   */\r\n  private apiUrl = 'api/articles';  // URL to web api environment.API_ENDPOINT\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  /**\r\n   * Returns an Observable for the HTTP GET request for the JSON resource.\r\n   * @return {KnowledgeBaseArticle[]} The Observable for the HTTP request.\r\n   */\r\n\r\n   listKnowledgeBaseArticle (): Observable<KnowledgeBaseArticle[]> {\r\n    return this.http.get(this.apiUrl)\r\n    .catch(this.handleErrorObservable);\r\n\r\n  }\r\n\r\n  /**\r\n   * Returns an Observable for the HTTP POST request for the JSON resource.\r\n   * @return {KnowledgeBaseArticle} The Observable for the HTTP request.\r\n   */\r\n\r\n  createKnowledgeBaseArticle (articleInfo: KnowledgeBaseArticle): Observable<KnowledgeBaseArticle> {\r\n        return this.http.post(this.apiUrl, articleInfo, httpOptions)\r\n                   .catch(this.handleErrorObservable);\r\n}\r\n\r\n  /**\r\n   * Returns an Observable for the HTTP POST request for the JSON resource.\r\n   * @return {KnowledgeBaseArticle} The Observable for the HTTP request.\r\n   */\r\n\r\n  updateKnowledgeBaseArticle (id: Number, articleInfo: KnowledgeBaseArticle): Observable<KnowledgeBaseArticle> {\r\n    return this.http.put(this.apiUrl + '/' + id, articleInfo, httpOptions)\r\n               .catch(this.handleErrorObservable);\r\n  }\r\n\r\n  /**\r\n   * Returns an Observable for the HTTP POST request for the JSON resource.\r\n   * @return {KnowledgeBaseArticle} The Observable for the HTTP request.\r\n   */\r\n\r\n  reteriveKnowledgeBaseArticleById(articleId: Number): Observable<KnowledgeBaseArticle> {\r\n    return this.http.get(this.apiUrl + '/' + articleId).catch(this.handleErrorObservable);\r\n}\r\n\r\n\r\n\r\n/**\r\n    * Handle HTTP error\r\n    */\r\n  private handleErrorObservable (error: Response | any) {\r\n    console.error(error.message || error);\r\n    return Observable.throw(error.message || error);\r\n  }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/service/knowledge-base-article/knowledge-base-article.service.ts","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Subject } from 'rxjs/Subject';\r\n \r\n@Injectable()\r\nexport class MessageService {\r\n    private subject = new Subject<any>();\r\n \r\n    sendMessage(message: string) {\r\n        this.subject.next({ text: message });\r\n    }\r\n \r\n    clearMessage() {\r\n        this.subject.next();\r\n    }\r\n \r\n    getMessage(): Observable<any> {\r\n        return this.subject.asObservable();\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/shared/service/message/message.ts","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { User } from '../.././modals/user';\r\nimport { of } from 'rxjs/observable/of';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport 'rxjs/add/operator/catch';\r\nimport { environment } from '../../../environments/environment';\r\nimport { AuthenticationService } from '../authentication/authentication.service';\r\n\r\n/**\r\n * This class provides the User service with methods to manage.\r\n */\r\n\r\n\r\n@Injectable()\r\nexport class UserService {\r\n  httpOptions: any;\r\n  /**\r\n   * Creates a new KnowledgeBaseContentervice with the injected HttpClient.\r\n   * @param {HttpClient} http - The injected HttpClient.\r\n   * @constructor\r\n   */\r\n  private apiUrl = environment.API_ENDPOINT + 'users';  // URL to web api environment.API_ENDPOINT\r\n\r\n  constructor(private http: HttpClient, private auth: AuthenticationService) {\r\n      const token = auth.getAccessToken();\r\n      this.httpOptions = {\r\n      headers: new HttpHeaders({ 'Content-Type': 'application/json', 'Authorization': token })\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Returns an Observable for the HTTP GET request for the JSON resource.\r\n   * @return {User[]} The Observable for the HTTP request.\r\n   */\r\n\r\n   listUser (): Observable<any> {\r\n    return this.http.get(this.apiUrl)\r\n    .catch(this.handleErrorObservable);\r\n  }\r\n\r\n  /**\r\n   * Returns an Observable for the HTTP POST request for the JSON resource.\r\n   * @return {User} The Observable for the HTTP request.\r\n   */\r\n\r\n  createUser (userInfo: User): Observable<any> {\r\n        return this.http.post(this.apiUrl, userInfo, this.httpOptions)\r\n                   .catch(this.handleErrorObservable);\r\n  }\r\n\r\n  /**\r\n   * Returns an Observable for the HTTP POST request for the JSON resource.\r\n   * @return {KnowledgeBaseArticle} The Observable for the HTTP request.\r\n   */\r\n\r\n  updateUser (id: String, userInfo: User): Observable<any> {\r\n    return this.http.put(this.apiUrl + '/' + id, userInfo, this.httpOptions)\r\n               .catch(this.handleErrorObservable);\r\n  }\r\n\r\n  /**\r\n   * Returns an Observable for the HTTP POST request for the JSON resource.\r\n   * @return {UserService} The Observable for the HTTP request.\r\n   */\r\n\r\n  reteriveUserById(userId: String): Observable<any> {\r\n    return this.http.get(this.apiUrl + '/' + userId, this.httpOptions).catch(this.handleErrorObservable);\r\n}\r\n\r\n/**\r\n   * Returns an Observable for the HTTP DELETE request for the JSON resource.\r\n   * @return {UserService} The Observable for the HTTP request.\r\n   */\r\n\r\n  deleteUser (id: String): Observable<any> {\r\n    return this.http.delete(this.apiUrl + '/' + id,  this.httpOptions)\r\n               .catch(this.handleErrorObservable);\r\n  }\r\n\r\n\r\n/**\r\n    * Handle HTTP error\r\n    */\r\n  private handleErrorObservable (error: Response | any) {\r\n    console.error(error.message || error);\r\n    return Observable.throw(error.message || error);\r\n  }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/service/user/user.service.ts","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport { KnowledgeBaseArticleService } from './service/knowledge-base-article/knowledge-base-article.service';\r\nimport { AuthenticationService } from './service/authentication/authentication.service';\r\nimport { fakeBackendProvider } from '../mock/fake-backend';\r\nimport { AuthGuard } from './service/helper/auth-guards';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { JwtInterceptor } from './service/helper/jwt-interceptor';\r\nimport { UserData } from '../mock/user-data';\r\nimport { UserService } from './service/user/user.service';\r\nimport { MessageService } from './service/message/message';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, RouterModule, HttpClientModule],\r\n  declarations: [],\r\n  exports: [CommonModule, FormsModule, RouterModule]\r\n})\r\nexport class SharedModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: SharedModule,\r\n      providers: [\r\n        KnowledgeBaseArticleService,\r\n        UserService,\r\n        AuthenticationService,\r\n        {\r\n            provide: HTTP_INTERCEPTORS,\r\n            useClass: JwtInterceptor,\r\n            multi: true\r\n        },\r\n\r\n        // provider used to create fake backend\r\n        fakeBackendProvider,\r\n        AuthGuard,\r\n        UserData,\r\n        UserService,\r\n        MessageService\r\n      ]\r\n    };\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/shared.module.ts"],"sourceRoot":"webpack:///"}